apiVersion: v1
data:
  jwtRS256.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS3dJQkFBS0NBZ0VBNEd2Wk5Ta2o1aWlXYjJEWk0yZkN4NWJHR1lnd2FLNFNNc3lJOEs4b0ZRZXBMMTNZClJPWEt3NVMrbEVMSDlBZXRUZGNUQWRrYkN6eWFwU2RrM1Bxd3hoQ2FmNGtudktlUmk3NmNzRzZtYzBrcngxR0kKdFk2NVgrTnEwcWFSdkxkT09iRlFHbUlIeDc1emtaNjU0K2Z0dm52Q1k1T1BqVjQ0TGt0dTF3bHJCbXIyMjVRUwpGYklhOEE5NkJTcEp6S20wYWhLKzZyOFZ2dk9xMUJIR1pJSUtLR1E3L3pMdXhQT24rYzN3Q0YwVlFZMjBZNFhvCm8rRFZ0LyswTUk4T1p2ZEF1YWIyVVh1YitUaXdBZ0c3Njh5bkpQaDdla2xMdGR0QTFCR2dsWG1vRVI0eHZoaFgKUXNPUnRUaTYwRlpQWDdDM1YxcmxVZStyVTlCWTZDbHJXbGVKdGdCZjFYUi90Qm1MZGZCNFlWbkt0ekI3dkxDbApPS3VsdGFkdVNWbmZ2OEMwdXoxelBCWkl3WG5zVk83WHlTVlBBSkJUOFBWR1Iza2JnOW5FRGsvclZsS1lNSW5EClNPOFNITnlLTytrNnBUaG1hbW9xTUJKQkNwY0MrRzFVUFVxWWV1Szh3NjZaU3BLV2ZQY3RtWWViUHNraUpiS2UKT3JIVlUyRGo3enpkaW1MMmJlaHFTd1NpM3pBa2xXZjRGU0F6aC80enBENFdxM0lDd2NYbFBxYTU5T0IwcXFBQwp4NUFtRUZsdlF1VUkwcTZ3WjZ2cmxBWUsrTWRtNER2RkFVbFhzNW1mbDZPRnZ0YkZTZHF1ckU2SXROVnlSVlFBCmx6WFdtaEM4R3JXQklodDFPSkxXREtPNWx2Wm1KUS9sazdic1VyNCsyK05ObnNzTXBuTUI2QytJejZzQ0F3RUEKQVFLQ0FnRUFoQ0c3ZnpzN3NiVlA3VCsrWWkvRFZMUUc2dDF1Y3hPYUQyS3hkZFFLNjJiWlM5UWJFMldnWGtyagpjbk5uT3R5U1F2UlFjcFFiQWlDcWhIYVBRalF2aEU0ZVNOeStFcXN1WEhMYjJsMHJqMUVUZjRVWDBwMjNzeWM0CnE5SDZtSHZzaUxkSERHR1BaeUZROWZuWVJNRTNEeUhhcjdvZm1RSlNYWjk0SVErZ2ZlVFlkeXZWQWdVZEt4NVIKbjF6b21xR0lZYk9yeUphOC9QS0dMOXBQVHJucHRTSmUyTUJxS0hlMC9MVXRrQjhOOXN5eDJxN3E3Q0hpY3pVUQpLRTd5RWRtZHVERC9jYll2ZlNyTkprRlRIV0FmUVBzejZDbmpjNjBsbkRiTXIzVXphUEM0Sk00OEFra1hMdlc1CnVCUTVJNFB1VG5acjhqUUVVWktuNWZrTkJlSG9aNjlZVVp2eWdOcGJRaVMxWi9CRzYwVDVZN1VPY09wWVJ2bCsKL0dSNUFSNnpZQVJKbTBKNmg3U2NsdGhLSjdaVnFldWV5U3B1UG9mTjg0V241Zm1mbWdsR2F0dlc4KzFGR2ZNRQppWGxHbzhHQ1ZyampzN013a0pMT3Jlc0lRblFWK3ZmWC95Nk9WRExMS21yeGJCT3BPcm5TK01icnFoOXBsRGFICks1N0VOVngzWWxVd2M3bFRHd2Q2cS9nVnhSWDZRc1F3VEl5UHVOOUozMWd0dXRCeS9FTVVGc1hJenJhRmRIQzgKZXVlT1N3V0JQT05XbUkzN1BCVTIycXFyMWE3d1Y3Z0lJOGg3WS8waDNDYjFYWjZsQ2FzOCt0emI3VFZNMGxWQwpINWNYaXRqM2xKS1B1b2VzOXpTNFhEQjQ0V1hwZkw4SFVXQ1NuSWF2ZVJYUHhwbDRJbUVDZ2dFQkFQMjJEZml3CmVaRDBSTzlManJSR2cxODJlNnNSZ052VUQrOTFjUnBRNFBDcnlKQm1tTmNWOFBNZVdoZFlPaHdCWW1JMjkyWkkKcjFyeHVwclBCdE43dTNnWmhKYkVXL1IvSFozc2lPSmNycHlhejBVNUpDSzRTOERSbkdnUUdOQUdJNFlsVUNxNwpLL2JOa0JLcnRpSEVpOWV6RGQ3SjIrRGJGK0FiSXNWdlNnNnNHdEp1TG8rY0VRUzFaNzkycTQ5NUt6dWJyUDhvClVIbWFuc1R1ZEtLL1lZY0dlcU9pS2V0bmgrK0ZUc0hXek1NTEJ3VllySVlZRHZ5RWUvZEFkNWUzM3ZTRSsrbXkKZEVaVkZidVRMQmdzSW4wM0dmZ1pnNE56QkNhSm9NZGJtU3NiaUxGMkRTL1g4eXNKNldLYzdVTFMwMXJwSjBLTgo0VldQNjhiZlZOd1YwbmtDZ2dFQkFPSnlKaVN5aGJrL1hEVjRzT2ZLS1BBQ3RJTkN0ZWk2OWpYVVVOUHNhQndNCjFMNURCOU5tNjhLb3piVTN1Rk9QbmRPZERrMms5cm5WS1JkSlYrTHhPQ2NEdE5aMzlGQ3JtbUs3TGc4TnBUM2cKVksxc29YamFtcGI3NU1LWjZzaGFIUDRFUUMvTVVoeVF1UXkydEtUS3JMYUNFRmdzR1RhRHFaOU9xMVdIZzhWNwoxdUkzak8xYnNzNFRQWjJxbXVOYjE0WEMzQnJaeDE4eWY3MnJZMEk5RTAxdXorUmp4VUdSK0E3dlloSklYVWtMCmtzQTJqV1ludktsVmZRRWJpWlVpcjQ0d2IraEZ4Z3JwcVBvSmNCTzgvdS9UYXZ3MjFqbjFkRys3NWZqZnI5M3UKRjExbUh2VVY2Z0RJenN4NDVicDVDek5oUmdTTHNRZk9INFdpdytIcUNrTUNnZ0VCQU1UZGtFZkpmL3IzWDhvaQo0ZStHeTRlRStqOEtqT2VHekhxdHNYNlBCWXdhYjcyRXJ0SXV4MUdPMnE5RW1ZcURsSGpMVi9zNUtVQXpVKzJ0CitRaisrTCsvWlQrcnpBS1M1RU5YZC92Vm1QUVJ1QVZweWwxYWpnVm5ZS3JxMnFZSUxXWjQ2NVRNdWRkL09HMFUKYW5ZWFViK2t3MzE5T3ExbXRFY0VKMTMxOWd3ZWhZMkZTNEhKd3ZiWllGQ1QzNW1ybHQxZzljTGo0RllMb1drRAo4dU1hQjY1RFc4US9IN0gzR3ViRGxSSVovN2JVaHJVaVVuU1dsSUppdHVKclZxRVdYdDF6bHhtR2pHekt0dHRlCjNwYy9IOS96Y3FZdC9mdHdzdWJJWWtadkVCSUFBbmhaTnZCSjYva1liczFESVdONXZlRE1DOWU3eWY2ZmQzOVEKYWtPQWQxa0NnZ0VCQUpCQ2RraFVydHBJSWg4eWgwanpRa2M5QWZESlZBZ3k2MTE1cUJDS2YveTJzK1dONEhOdQpFdTROQ2hmVHFvc1phRXVDdDdVQlRla3ZnaUVDcVltN2NMRnlMQWVobmJTeXpnVHVDRGF3MDc5cXBhZGlHREJjCjI3VXFQaDgzWFJwTVJrSVJSUzd1TkxWY0FYZTNBYmdtSWdlWExvQnRmNVo2SkZxSURLRE5WMFk5VWJVRi9MTE8KQTBoRGU3SnhHSUdWWmVVaU1ZU3RqdFQzMytkZVF6clVtL0p0a09XSUpnZFN6YnYrQnZWc3dua2hkVmtjcDlJWApxSm9jQ3lua2VDN1pUUXdCa1psZ3NmMEx4SW1kNzVlemhKb1dqd2FraksrWnpwYk1Gb01KUmduVmYyOFIrdERhCktCeGQwVmowQUM1ZXBLTVQ2ajVGRy8vRDhkTDUwVjZmOGU4Q2dnRUJBTWgreklJb3FKZWlXTGgzOUFtTTRQZEkKSFNod0lISXBUNUhGS05jOTFzRnRDZFdXVDIweXVPZHNLZU9TTDZjMjJsVFpjcklFZFlDY0Q5SVhyWm8xVmxXOAorSGFmNDFhcHhlaU1PZVBNR3ZlNEQ2ZEdrUXcyWXBuNXlOQUUwYk1qa1hFU3JuMzMvV3JqSFFtWFdvNmFSdnVZCnkrMktzbGwvK1BzajlwNXd3WVYxRGp0QzFXU0lmdFZNMkJuRlViQVVyMmNHSVNXWlNnWU9yUDU1elZKK3REeloKSXhrMDZ6TUNZU3pEL1pPTUJZSjUvTFFPWnlPUUs0R2xnMytUUUNXUERHNTRtUEo0dElmNUZCZ25wSU5QRGNLQwpLc2RTQlg4S0xNeU83aEVzOCtuZFRWNWlxa0pscGNCdVJ3VXVUSmlFakc0MWZnaXZPVThTR0V5elZPbW1NNG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  jwtRS256.key.pub: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUE0R3ZaTlNrajVpaVdiMkRaTTJmQwp4NWJHR1lnd2FLNFNNc3lJOEs4b0ZRZXBMMTNZUk9YS3c1UytsRUxIOUFldFRkY1RBZGtiQ3p5YXBTZGszUHF3CnhoQ2FmNGtudktlUmk3NmNzRzZtYzBrcngxR0l0WTY1WCtOcTBxYVJ2TGRPT2JGUUdtSUh4NzV6a1o2NTQrZnQKdm52Q1k1T1BqVjQ0TGt0dTF3bHJCbXIyMjVRU0ZiSWE4QTk2QlNwSnpLbTBhaEsrNnI4VnZ2T3ExQkhHWklJSwpLR1E3L3pMdXhQT24rYzN3Q0YwVlFZMjBZNFhvbytEVnQvKzBNSThPWnZkQXVhYjJVWHViK1Rpd0FnRzc2OHluCkpQaDdla2xMdGR0QTFCR2dsWG1vRVI0eHZoaFhRc09SdFRpNjBGWlBYN0MzVjFybFVlK3JVOUJZNkNscldsZUoKdGdCZjFYUi90Qm1MZGZCNFlWbkt0ekI3dkxDbE9LdWx0YWR1U1ZuZnY4QzB1ejF6UEJaSXdYbnNWTzdYeVNWUApBSkJUOFBWR1Iza2JnOW5FRGsvclZsS1lNSW5EU084U0hOeUtPK2s2cFRobWFtb3FNQkpCQ3BjQytHMVVQVXFZCmV1Szh3NjZaU3BLV2ZQY3RtWWViUHNraUpiS2VPckhWVTJEajd6emRpbUwyYmVocVN3U2kzekFrbFdmNEZTQXoKaC80enBENFdxM0lDd2NYbFBxYTU5T0IwcXFBQ3g1QW1FRmx2UXVVSTBxNndaNnZybEFZSytNZG00RHZGQVVsWApzNW1mbDZPRnZ0YkZTZHF1ckU2SXROVnlSVlFBbHpYV21oQzhHcldCSWh0MU9KTFdES081bHZabUpRL2xrN2JzClVyNCsyK05ObnNzTXBuTUI2QytJejZzQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=
kind: Secret
metadata:
  name: jwt-key
  namespace: bank-of-harness
type: Opaque
---
apiVersion: v1
data:
  HARNESS_SDK_KEY: c04150c9-ea1b-4012-af4c-34a830712206
  LOCAL_ROUTING_NUM: "883745000"
  PUB_KEY_PATH: /root/.ssh/publickey
kind: ConfigMap
metadata:
  name: environment-config
  namespace: bank-of-harness
---
apiVersion: v1
data:
  BALANCES_API_ADDR: balancereader:8080
  CONTACTS_API_ADDR: contacts:8080
  HISTORY_API_ADDR: transactionhistory:8080
  TRANSACTIONS_API_ADDR: ledgerwriter:8080
  USERSERVICE_API_ADDR: userservice:8080
kind: ConfigMap
metadata:
  name: service-api-config
  namespace: bank-of-harness
---
apiVersion: v1
data:
  DEMO_LOGIN_PASSWORD: bankofanthos
  DEMO_LOGIN_USERNAME: testuser
  USE_DEMO_DATA: "True"
kind: ConfigMap
metadata:
  name: demo-data-config
  namespace: bank-of-harness

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: accounts-db
    tier: db
  name: accounts-db
  namespace: bank-of-harness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounts-db
      tier: db
  serviceName: accounts-db
  template:
    metadata:
      labels:
        app: accounts-db
        tier: db
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: accounts-db-config
        - configMapRef:
            name: demo-data-config
        image: gcr.io/sales-209522/bank-of-harness/accounts-db:v0.5.1-308-g850ed85@sha256:1ffb0d0d5557222929bfbc98e5a2e8a66afa298aaea8eead481c4d3f7eeff9d5
        name: accounts-db
        ports:
        - containerPort: 5432
          name: postgredb
        resources:
          limits:
            cpu: 250m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdb
          subPath: postgres
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: postgresdb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: accounts-db
    tier: db
  name: accounts-db
  namespace: bank-of-harness
spec:
  ports:
  - name: tcp
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: accounts-db
    tier: db
---
apiVersion: v1
data:
  ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
  POSTGRES_DB: accounts-db
  POSTGRES_PASSWORD: accounts-pwd
  POSTGRES_USER: accounts-admin
kind: ConfigMap
metadata:
  labels:
    app: accounts-db
  name: accounts-db-config
  namespace: bank-of-harness
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ledger-db
  namespace: bank-of-harness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ledger-db
  serviceName: ledger-db
  template:
    metadata:
      labels:
        app: ledger-db
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: ledger-db-config
        - configMapRef:
            name: demo-data-config
        image: gcr.io/sales-209522/bank-of-harness/ledger-db:v0.5.1-308-g850ed85@sha256:bd7e0ef596047f423e243dc2a4cf01b7f6fd3fa3235bd180988cc6803ab0beda
        name: postgres
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresdb
          subPath: postgres
      serviceAccountName: default
      volumes:
      - emptyDir: {}
        name: postgresdb
---
apiVersion: v1
data:
  POSTGRES_DB: postgresdb
  POSTGRES_PASSWORD: password
  POSTGRES_USER: admin
  SPRING_DATASOURCE_PASSWORD: password
  SPRING_DATASOURCE_URL: jdbc:postgresql://ledger-db:5432/postgresdb
  SPRING_DATASOURCE_USERNAME: admin
kind: ConfigMap
metadata:
  labels:
    app: postgres
  name: ledger-db-config
  namespace: bank-of-harness
---
apiVersion: v1
kind: Service
metadata:
  name: ledger-db
  namespace: bank-of-harness
spec:
  ports:
  - name: tcp
    port: 5432
    targetPort: 5432
  selector:
    app: ledger-db
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balancereader
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: balancereader
  template:
    metadata:
      labels:
        app: balancereader
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: ENABLE_METRICS
          value: "false"
        - name: POLL_MS
          value: "100"
        - name: CACHE_SIZE
          value: "1000000"
        - name: JVM_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
            -Xms256m -Xmx512m
        - name: LOG_LEVEL
          value: info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: ledger-db-config
        image: gcr.io/sales-209522/bank-of-harness/balancereader:v0.5.1-308-g850ed85-dirty@sha256:554850f09c5af85c24a9571d4ef265b88bff6393b48e81a02d3e0c9e9bd5df0e
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10
        name: balancereader
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthy
            port: 8080
          periodSeconds: 10
        volumeMounts:
        - mountPath: /root/.ssh
          name: publickey
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: publickey
        secret:
          items:
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: balancereader
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: balancereader
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contacts
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: contacts
  template:
    metadata:
      labels:
        app: contacts
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: LOG_LEVEL
          value: info
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: accounts-db-config
        image: gcr.io/sales-209522/bank-of-harness/contacts:v0.5.1-308-g850ed85@sha256:8100bf48f522e9f31ebcdb7bc91b0a85e5dbe2195bea8438f398b0be717b7b44
        name: contacts
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /root/.ssh
          name: publickey
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: publickey
        secret:
          items:
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: contacts
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: contacts
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ledgerwriter
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: ledgerwriter
  template:
    metadata:
      labels:
        app: ledgerwriter
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: ENABLE_METRICS
          value: "false"
        - name: JVM_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
            -Xms256m -Xmx512m
        - name: LOG_LEVEL
          value: info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: service-api-config
        - configMapRef:
            name: ledger-db-config
        image: gcr.io/sales-209522/bank-of-harness/ledgerwriter:v0.5.1-308-g850ed85-dirty@sha256:6067627256028a1f7ec418f76b642534cb3498a099239f1f46d489727f96c335
        name: ledgerwriter
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /ready
            port: 8080
          periodSeconds: 10
        volumeMounts:
        - mountPath: /root/.ssh
          name: publickey
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: publickey
        secret:
          items:
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: ledgerwriter
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: ledgerwriter
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transactionhistory
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: transactionhistory
  template:
    metadata:
      labels:
        app: transactionhistory
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: ENABLE_METRICS
          value: "false"
        - name: POLL_MS
          value: "100"
        - name: CACHE_SIZE
          value: "1000"
        - name: CACHE_MINUTES
          value: "60"
        - name: HISTORY_LIMIT
          value: "100"
        - name: JVM_OPTS
          value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
            -Xms256m -Xmx512m
        - name: LOG_LEVEL
          value: info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: ledger-db-config
        image: gcr.io/sales-209522/bank-of-harness/transactionhistory:v0.5.1-308-g850ed85-dirty@sha256:0d933f978bbbe79f2fdc3e7d852d42ead76294d7c2da090421b1dde357d84fcc
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 10
        name: transactionhistory
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthy
            port: 8080
          periodSeconds: 10
        volumeMounts:
        - mountPath: /root/.ssh
          name: publickey
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: publickey
        secret:
          items:
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: transactionhistory
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: transactionhistory
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userservice
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: userservice
  template:
    metadata:
      labels:
        app: userservice
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: TOKEN_EXPIRY_SECONDS
          value: "3600"
        - name: PRIV_KEY_PATH
          value: /root/.ssh/privatekey
        - name: LOG_LEVEL
          value: info
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: accounts-db-config
        image: gcr.io/sales-209522/bank-of-harness/userservice:v0.5.1-308-g850ed85@sha256:e3b287d5fd161f7847d687473da71ceea9802797890d1f0a00c8a19846e5fb1b
        name: userservice
        ports:
        - containerPort: 8080
          name: http-server
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 64Mi
        volumeMounts:
        - mountPath: /root/.ssh
          name: keys
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: keys
        secret:
          items:
          - key: jwtRS256.key
            path: privatekey
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: userservice
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: userservice
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: bank-of-harness
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - env:
        - name: VERSION
          value: dev
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "false"
        - name: SCHEME
          value: http
        - name: LOG_LEVEL
          value: info
        - name: BANK_NAME
          value: Bank of Harness
        - name: DEFAULT_USERNAME
          valueFrom:
            configMapKeyRef:
              key: DEMO_LOGIN_USERNAME
              name: demo-data-config
        - name: DEFAULT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DEMO_LOGIN_PASSWORD
              name: demo-data-config
        envFrom:
        - configMapRef:
            name: environment-config
        - configMapRef:
            name: service-api-config
        image: gcr.io/sales-209522/bank-of-harness/frontend:v0.5.1-308-g850ed85-dirty@sha256:9841ac7c71aa7f10b56c6910c55e48bb4227a5e30ea23d6308cd8a0f81086961
        livenessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 30
        name: front
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /root/.ssh
          name: publickey
          readOnly: true
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      volumes:
      - name: publickey
        secret:
          items:
          - key: jwtRS256.key.pub
            path: publickey
          secretName: jwt-key
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: bank-of-harness
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: frontend
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: bank-of-harness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadgenerator
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app: loadgenerator
    spec:
      containers:
      - env:
        - name: FRONTEND_ADDR
          value: frontend:80
        - name: USERS
          value: "5"
        - name: LOG_LEVEL
          value: error
        image: gcr.io/sales-209522/bank-of-harness/loadgenerator:v0.5.1-308-g850ed85@sha256:77d56533a16e35537ab4a66e94521ce0d871070ba50638fc9dec7b29da6837a9
        name: loadgenerator
        resources:
          limits:
            cpu: 250m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
      restartPolicy: Always
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
